"""Add optimization tables

Revision ID: 96970d6591dc
Revises: 
Create Date: 2025-06-10 16:34:12.615936

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '96970d6591dc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('optimization_examples',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('difficulty_level', sa.String(length=20), nullable=False),
    sa.Column('original_prompt', sa.Text(), nullable=False),
    sa.Column('optimized_prompt', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('optimization_explanation', sa.Text(), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('like_count', sa.Integer(), nullable=False),
    sa.Column('quality_score_before', sa.Integer(), nullable=True),
    sa.Column('quality_score_after', sa.Integer(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_optimization_examples_category'), 'optimization_examples', ['category'], unique=False)
    op.create_index(op.f('ix_optimization_examples_id'), 'optimization_examples', ['id'], unique=False)
    op.create_table('optimization_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('optimization_type', sa.String(length=50), nullable=False),
    sa.Column('template_content', sa.Text(), nullable=False),
    sa.Column('instruction', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('use_cases', sa.Text(), nullable=True),
    sa.Column('parameters', sa.Text(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_system_template', sa.Boolean(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_optimization_templates_id'), 'optimization_templates', ['id'], unique=False)
    op.create_table('optimizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('original_prompt', sa.Text(), nullable=False),
    sa.Column('optimized_prompt', sa.Text(), nullable=False),
    sa.Column('quality_score_before', sa.Integer(), nullable=True),
    sa.Column('quality_score_after', sa.Integer(), nullable=True),
    sa.Column('optimization_type', sa.String(length=50), nullable=False),
    sa.Column('ai_model_used', sa.String(length=50), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('cost_estimate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_optimizations_id'), 'optimizations', ['id'], unique=False)
    op.create_table('optimization_improvements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('optimization_id', sa.Integer(), nullable=False),
    sa.Column('improvement_type', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('before_text', sa.Text(), nullable=True),
    sa.Column('after_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['optimization_id'], ['optimizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_optimization_improvements_id'), 'optimization_improvements', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_optimization_improvements_id'), table_name='optimization_improvements')
    op.drop_table('optimization_improvements')
    op.drop_index(op.f('ix_optimizations_id'), table_name='optimizations')
    op.drop_table('optimizations')
    op.drop_index(op.f('ix_optimization_templates_id'), table_name='optimization_templates')
    op.drop_table('optimization_templates')
    op.drop_index(op.f('ix_optimization_examples_id'), table_name='optimization_examples')
    op.drop_index(op.f('ix_optimization_examples_category'), table_name='optimization_examples')
    op.drop_table('optimization_examples')
    # ### end Alembic commands ###
